
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.12.1.0
//   Input filename:  benchmark/nightwatch/bond/schema.bond
//   Output filename: schema_types.cpp
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#include "schema_reflection.h"
#include <bond/core/exception.h>

namespace benchmark
{
    
    const ::bond::Metadata Globals::Schema::metadata
        = Globals::Schema::GetMetadata();
    
    const ::bond::Metadata Globals::Schema::s_abortOnAssertionFailure_metadata
        = ::bond::reflection::MetadataInit("abortOnAssertionFailure", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Globals::Schema::s_abortOnElementLocateError_metadata
        = ::bond::reflection::MetadataInit("abortOnElementLocateError", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Globals::Schema::s_waitForConditionPollInterval_metadata
        = ::bond::reflection::MetadataInit("waitForConditionPollInterval", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Globals::Schema::s_waitForConditionTimeout_metadata
        = ::bond::reflection::MetadataInit("waitForConditionTimeout", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Globals::Schema::s_throwOnMultipleElementsReturned_metadata
        = ::bond::reflection::MetadataInit("throwOnMultipleElementsReturned", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Globals::Schema::s_suppressWarningsOnMultipleElementsReturned_metadata
        = ::bond::reflection::MetadataInit("suppressWarningsOnMultipleElementsReturned", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Globals::Schema::s_asyncHookTimeout_metadata
        = ::bond::reflection::MetadataInit("asyncHookTimeout", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Globals::Schema::s_unitTestsTimeout_metadata
        = ::bond::reflection::MetadataInit("unitTestsTimeout", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Globals::Schema::s_customReporterCallbackTimeout_metadata
        = ::bond::reflection::MetadataInit("customReporterCallbackTimeout", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Globals::Schema::s_retryAssertionTimeout_metadata
        = ::bond::reflection::MetadataInit("retryAssertionTimeout", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
    const ::bond::Metadata Empty::Schema::metadata
        = Empty::Schema::GetMetadata();

    
    const ::bond::Metadata Selenium::Schema::metadata
        = Selenium::Schema::GetMetadata();
    
    const ::bond::Metadata Selenium::Schema::s_start_process_metadata
        = ::bond::reflection::MetadataInit("start_process", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Selenium::Schema::s_cli_args_metadata
        = ::bond::reflection::MetadataInit("cli_args", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Selenium::Schema::s_server_path_metadata
        = ::bond::reflection::MetadataInit("server_path", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Selenium::Schema::s_log_path_metadata
        = ::bond::reflection::MetadataInit("log_path", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Selenium::Schema::s_check_process_delay_metadata
        = ::bond::reflection::MetadataInit("check_process_delay", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Selenium::Schema::s_max_status_poll_tries_metadata
        = ::bond::reflection::MetadataInit("max_status_poll_tries", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Selenium::Schema::s_status_poll_interval_metadata
        = ::bond::reflection::MetadataInit("status_poll_interval", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
    const ::bond::Metadata WebDriver::Schema::metadata
        = WebDriver::Schema::GetMetadata();
    
    const ::bond::Metadata WebDriver::Schema::s_start_process_metadata
        = ::bond::reflection::MetadataInit("start_process", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata WebDriver::Schema::s_cli_args_metadata
        = ::bond::reflection::MetadataInit("cli_args", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata WebDriver::Schema::s_server_path_metadata
        = ::bond::reflection::MetadataInit("server_path", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata WebDriver::Schema::s_log_path_metadata
        = ::bond::reflection::MetadataInit("log_path", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata WebDriver::Schema::s_check_process_delay_metadata
        = ::bond::reflection::MetadataInit("check_process_delay", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata WebDriver::Schema::s_max_status_poll_tries_metadata
        = ::bond::reflection::MetadataInit("max_status_poll_tries", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata WebDriver::Schema::s_status_poll_interval_metadata
        = ::bond::reflection::MetadataInit("status_poll_interval", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata WebDriver::Schema::s_process_create_timeout_metadata
        = ::bond::reflection::MetadataInit("process_create_timeout", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata WebDriver::Schema::s_timeout_options_metadata
        = ::bond::reflection::MetadataInit("timeout_options", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
    const ::bond::Metadata DesiredCapabilities::Schema::metadata
        = DesiredCapabilities::Schema::GetMetadata();
    
    const ::bond::Metadata DesiredCapabilities::Schema::s_browserName_metadata
        = ::bond::reflection::MetadataInit("browserName", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
    const ::bond::Metadata Main::Schema::metadata
        = Main::Schema::GetMetadata();
    
    const ::bond::Metadata Main::Schema::s_custom_commands_path_metadata
        = ::bond::reflection::MetadataInit("custom_commands_path", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_custom_assertions_path_metadata
        = ::bond::reflection::MetadataInit("custom_assertions_path", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_page_objects_path_metadata
        = ::bond::reflection::MetadataInit("page_objects_path", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_globals_path_metadata
        = ::bond::reflection::MetadataInit("globals_path", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_globals_metadata
        = ::bond::reflection::MetadataInit("globals", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_dotenv_metadata
        = ::bond::reflection::MetadataInit("dotenv", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_persist_globals_metadata
        = ::bond::reflection::MetadataInit("persist_globals", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_output_folder_metadata
        = ::bond::reflection::MetadataInit("output_folder", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_src_folders_metadata
        = ::bond::reflection::MetadataInit("src_folders", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_live_output_metadata
        = ::bond::reflection::MetadataInit("live_output", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_disable_colors_metadata
        = ::bond::reflection::MetadataInit("disable_colors", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_parallel_process_delay_metadata
        = ::bond::reflection::MetadataInit("parallel_process_delay", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_selenium_metadata
        = ::bond::reflection::MetadataInit("selenium", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_start_session_metadata
        = ::bond::reflection::MetadataInit("start_session", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_end_session_on_fail_metadata
        = ::bond::reflection::MetadataInit("end_session_on_fail", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_test_workers_metadata
        = ::bond::reflection::MetadataInit("test_workers", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_test_runner_metadata
        = ::bond::reflection::MetadataInit("test_runner", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_webdriver_metadata
        = ::bond::reflection::MetadataInit("webdriver", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_test_settings_metadata
        = ::bond::reflection::MetadataInit("test_settings", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_launch_url_metadata
        = ::bond::reflection::MetadataInit("launch_url", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_silent_metadata
        = ::bond::reflection::MetadataInit("silent", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_output_metadata
        = ::bond::reflection::MetadataInit("output", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_detailed_output_metadata
        = ::bond::reflection::MetadataInit("detailed_output", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_output_timestamp_metadata
        = ::bond::reflection::MetadataInit("output_timestamp", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_disable_error_log_metadata
        = ::bond::reflection::MetadataInit("disable_error_log", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_screenshots_metadata
        = ::bond::reflection::MetadataInit("screenshots", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_log_screenshot_data_metadata
        = ::bond::reflection::MetadataInit("log_screenshot_data", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_desiredCapabilities_metadata
        = ::bond::reflection::MetadataInit("desiredCapabilities", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_exclude_metadata
        = ::bond::reflection::MetadataInit("exclude", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_filter_metadata
        = ::bond::reflection::MetadataInit("filter", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_skipgroup_metadata
        = ::bond::reflection::MetadataInit("skipgroup", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_sync_test_names_metadata
        = ::bond::reflection::MetadataInit("sync_test_names", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_skiptags_metadata
        = ::bond::reflection::MetadataInit("skiptags", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_use_xpath_metadata
        = ::bond::reflection::MetadataInit("use_xpath", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_parallel_mode_metadata
        = ::bond::reflection::MetadataInit("parallel_mode", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_report_prefix_metadata
        = ::bond::reflection::MetadataInit("report_prefix", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_unit_tests_mode_metadata
        = ::bond::reflection::MetadataInit("unit_tests_mode", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_default_reporter_metadata
        = ::bond::reflection::MetadataInit("default_reporter", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
} // namespace benchmark
