
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.12.1.0
//   Input filename:  benchmark/githubworkflow/bond/schema.bond
//   Output filename: schema_types.cpp
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#include "schema_reflection.h"
#include <bond/core/exception.h>

namespace benchmark
{
    
    const ::bond::Metadata Environment::Schema::metadata
        = Environment::Schema::GetMetadata();
    
    const ::bond::Metadata Environment::Schema::s_buildSuiteDir_metadata
        = ::bond::reflection::MetadataInit("buildSuiteDir", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
    const ::bond::Metadata With::Schema::metadata
        = With::Schema::GetMetadata();
    
    const ::bond::Metadata With::Schema::s_nodeVersion_metadata
        = ::bond::reflection::MetadataInit("nodeVersion", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
    const ::bond::Metadata Step::Schema::metadata
        = Step::Schema::GetMetadata();
    
    const ::bond::Metadata Step::Schema::s_uses_metadata
        = ::bond::reflection::MetadataInit(::bond::nothing, "uses");
    
    const ::bond::Metadata Step::Schema::s_run_metadata
        = ::bond::reflection::MetadataInit(::bond::nothing, "run");
    
    const ::bond::Metadata Step::Schema::s_workingDirectory_metadata
        = ::bond::reflection::MetadataInit(::bond::nothing, "workingDirectory");
    
    const ::bond::Metadata Step::Schema::s_with_metadata
        = ::bond::reflection::MetadataInit("with");
    
    const ::bond::Metadata Step::Schema::s_name_metadata
        = ::bond::reflection::MetadataInit(::bond::nothing, "name");

    
    const ::bond::Metadata Build::Schema::metadata
        = Build::Schema::GetMetadata();
    
    const ::bond::Metadata Build::Schema::s_runsOn_metadata
        = ::bond::reflection::MetadataInit("runsOn", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Build::Schema::s_env_metadata
        = ::bond::reflection::MetadataInit("env", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Build::Schema::s_steps_metadata
        = ::bond::reflection::MetadataInit("steps", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
    const ::bond::Metadata Jobs::Schema::metadata
        = Jobs::Schema::GetMetadata();
    
    const ::bond::Metadata Jobs::Schema::s_build_metadata
        = ::bond::reflection::MetadataInit("build", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
    const ::bond::Metadata Main::Schema::metadata
        = Main::Schema::GetMetadata();
    
    const ::bond::Metadata Main::Schema::s_name_metadata
        = ::bond::reflection::MetadataInit("name", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_on_metadata
        = ::bond::reflection::MetadataInit("on", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());
    
    const ::bond::Metadata Main::Schema::s_jobs_metadata
        = ::bond::reflection::MetadataInit("jobs", ::bond::reflection::required_field_modifier::value,
                ::bond::reflection::Attributes());

    
} // namespace benchmark
