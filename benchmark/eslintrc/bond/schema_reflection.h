
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.12.1.0
//   Input filename:  benchmark/eslintrc/bond/schema.bond
//   Output filename: schema_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "schema_types.h"
#include <bond/core/reflection.h>

namespace benchmark
{
    //
    // EcmaFeatures
    //
    struct EcmaFeatures::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_jsx_metadata;

        public: struct var
        {
            // jsx
            typedef struct jsx_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                EcmaFeatures,
                bool,
                &EcmaFeatures::jsx,
                &s_jsx_metadata
            > {} jsx;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::jsx>::type fields1;

        public: typedef fields1::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("EcmaFeatures", "benchmark.EcmaFeatures",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Environment
    //
    struct Environment::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_browser_metadata;
        private: static const ::bond::Metadata s_node_metadata;
        private: static const ::bond::Metadata s_es6_metadata;

        public: struct var
        {
            // browser
            typedef struct browser_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                Environment,
                bool,
                &Environment::browser,
                &s_browser_metadata
            > {} browser;
        
            // node
            typedef struct node_type : ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::required_field_modifier,
                Environment,
                bool,
                &Environment::node,
                &s_node_metadata
            > {} node;
        
            // es6
            typedef struct es6_type : ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::required_field_modifier,
                Environment,
                bool,
                &Environment::es6,
                &s_es6_metadata
            > {} es6;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::es6>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::node>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::browser>::type fields3;

        public: typedef fields3::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Environment", "benchmark.Environment",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // JSDocOptions
    //
    struct JSDocOptions::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_requireReturn_metadata;

        public: struct var
        {
            // requireReturn
            typedef struct requireReturn_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                JSDocOptions,
                bool,
                &JSDocOptions::requireReturn,
                &s_requireReturn_metadata
            > {} requireReturn;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::requireReturn>::type fields1;

        public: typedef fields1::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("JSDocOptions", "benchmark.JSDocOptions",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // JSDocRule
    //
    struct JSDocRule::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_numeric_metadata;
        private: static const ::bond::Metadata s_options_metadata;

        public: struct var
        {
            // numeric
            typedef struct numeric_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::optional_field_modifier,
                JSDocRule,
                uint8_t,
                &JSDocRule::numeric,
                &s_numeric_metadata
            > {} numeric;
        
            // options
            typedef struct options_type : ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::optional_field_modifier,
                JSDocRule,
                ::benchmark::JSDocOptions,
                &JSDocRule::options,
                &s_options_metadata
            > {} options;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::options>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::numeric>::type fields2;

        public: typedef fields2::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("JSDocRule", "benchmark.JSDocRule",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Rules
    //
    struct Rules::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_eqeqeq_metadata;
        private: static const ::bond::Metadata s_commaDangle_metadata;
        private: static const ::bond::Metadata s_noConsole_metadata;
        private: static const ::bond::Metadata s_noDebugger_metadata;
        private: static const ::bond::Metadata s_noExtraSemi_metadata;
        private: static const ::bond::Metadata s_noExtraParens_metadata;
        private: static const ::bond::Metadata s_noIrregularWhitespace_metadata;
        private: static const ::bond::Metadata s_noUndef_metadata;
        private: static const ::bond::Metadata s_noUnusedVars_metadata;
        private: static const ::bond::Metadata s_semi_metadata;
        private: static const ::bond::Metadata s_semiSpacing_metadata;
        private: static const ::bond::Metadata s_validJsdoc_metadata;
        private: static const ::bond::Metadata s_reactDisplayName_metadata;
        private: static const ::bond::Metadata s_reactForbidPropTypes_metadata;
        private: static const ::bond::Metadata s_reactJsxBooleanValue_metadata;
        private: static const ::bond::Metadata s_reactJsxClosingBracketLocation_metadata;
        private: static const ::bond::Metadata s_reactJsxCurlySpacing_metadata;
        private: static const ::bond::Metadata s_reactJsxIndentProps_metadata;
        private: static const ::bond::Metadata s_reactJsxMaxPropsPerLine_metadata;
        private: static const ::bond::Metadata s_reactJsxNoDuplicateProps_metadata;
        private: static const ::bond::Metadata s_reactJsxNoLiterals_metadata;
        private: static const ::bond::Metadata s_reactJsxNoUndef_metadata;
        private: static const ::bond::Metadata s_reactJsxSortPropTypes_metadata;
        private: static const ::bond::Metadata s_reactJsxSortProps_metadata;
        private: static const ::bond::Metadata s_reactJsxUsesReact_metadata;
        private: static const ::bond::Metadata s_reactJsxUsesVars_metadata;
        private: static const ::bond::Metadata s_reactNoDanger_metadata;
        private: static const ::bond::Metadata s_reactNoDidMountSetState_metadata;
        private: static const ::bond::Metadata s_reactNoDidUpdateSetState_metadata;
        private: static const ::bond::Metadata s_reactNoDirectMutationState_metadata;
        private: static const ::bond::Metadata s_reactNoMultiComp_metadata;
        private: static const ::bond::Metadata s_reactNoSetState_metadata;
        private: static const ::bond::Metadata s_reactNoUnknownProperty_metadata;
        private: static const ::bond::Metadata s_reactPropTypes_metadata;
        private: static const ::bond::Metadata s_reactReactInJsxScope_metadata;
        private: static const ::bond::Metadata s_reactRequireExtension_metadata;
        private: static const ::bond::Metadata s_reactSelfClosingComp_metadata;
        private: static const ::bond::Metadata s_reactSortComp_metadata;
        private: static const ::bond::Metadata s_reactWrapMultilines_metadata;

        public: struct var
        {
            // eqeqeq
            typedef struct eqeqeq_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::eqeqeq,
                &s_eqeqeq_metadata
            > {} eqeqeq;
        
            // commaDangle
            typedef struct commaDangle_type : ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::commaDangle,
                &s_commaDangle_metadata
            > {} commaDangle;
        
            // noConsole
            typedef struct noConsole_type : ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::noConsole,
                &s_noConsole_metadata
            > {} noConsole;
        
            // noDebugger
            typedef struct noDebugger_type : ::bond::reflection::FieldTemplate<
                3,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::noDebugger,
                &s_noDebugger_metadata
            > {} noDebugger;
        
            // noExtraSemi
            typedef struct noExtraSemi_type : ::bond::reflection::FieldTemplate<
                4,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::noExtraSemi,
                &s_noExtraSemi_metadata
            > {} noExtraSemi;
        
            // noExtraParens
            typedef struct noExtraParens_type : ::bond::reflection::FieldTemplate<
                5,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::noExtraParens,
                &s_noExtraParens_metadata
            > {} noExtraParens;
        
            // noIrregularWhitespace
            typedef struct noIrregularWhitespace_type : ::bond::reflection::FieldTemplate<
                6,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::noIrregularWhitespace,
                &s_noIrregularWhitespace_metadata
            > {} noIrregularWhitespace;
        
            // noUndef
            typedef struct noUndef_type : ::bond::reflection::FieldTemplate<
                7,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::noUndef,
                &s_noUndef_metadata
            > {} noUndef;
        
            // noUnusedVars
            typedef struct noUnusedVars_type : ::bond::reflection::FieldTemplate<
                8,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::noUnusedVars,
                &s_noUnusedVars_metadata
            > {} noUnusedVars;
        
            // semi
            typedef struct semi_type : ::bond::reflection::FieldTemplate<
                9,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::semi,
                &s_semi_metadata
            > {} semi;
        
            // semiSpacing
            typedef struct semiSpacing_type : ::bond::reflection::FieldTemplate<
                10,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::semiSpacing,
                &s_semiSpacing_metadata
            > {} semiSpacing;
        
            // validJsdoc
            typedef struct validJsdoc_type : ::bond::reflection::FieldTemplate<
                11,
                ::bond::reflection::required_field_modifier,
                Rules,
                std::list< ::benchmark::JSDocRule>,
                &Rules::validJsdoc,
                &s_validJsdoc_metadata
            > {} validJsdoc;
        
            // reactDisplayName
            typedef struct reactDisplayName_type : ::bond::reflection::FieldTemplate<
                12,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactDisplayName,
                &s_reactDisplayName_metadata
            > {} reactDisplayName;
        
            // reactForbidPropTypes
            typedef struct reactForbidPropTypes_type : ::bond::reflection::FieldTemplate<
                13,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactForbidPropTypes,
                &s_reactForbidPropTypes_metadata
            > {} reactForbidPropTypes;
        
            // reactJsxBooleanValue
            typedef struct reactJsxBooleanValue_type : ::bond::reflection::FieldTemplate<
                14,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxBooleanValue,
                &s_reactJsxBooleanValue_metadata
            > {} reactJsxBooleanValue;
        
            // reactJsxClosingBracketLocation
            typedef struct reactJsxClosingBracketLocation_type : ::bond::reflection::FieldTemplate<
                15,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxClosingBracketLocation,
                &s_reactJsxClosingBracketLocation_metadata
            > {} reactJsxClosingBracketLocation;
        
            // reactJsxCurlySpacing
            typedef struct reactJsxCurlySpacing_type : ::bond::reflection::FieldTemplate<
                16,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxCurlySpacing,
                &s_reactJsxCurlySpacing_metadata
            > {} reactJsxCurlySpacing;
        
            // reactJsxIndentProps
            typedef struct reactJsxIndentProps_type : ::bond::reflection::FieldTemplate<
                17,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxIndentProps,
                &s_reactJsxIndentProps_metadata
            > {} reactJsxIndentProps;
        
            // reactJsxMaxPropsPerLine
            typedef struct reactJsxMaxPropsPerLine_type : ::bond::reflection::FieldTemplate<
                18,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxMaxPropsPerLine,
                &s_reactJsxMaxPropsPerLine_metadata
            > {} reactJsxMaxPropsPerLine;
        
            // reactJsxNoDuplicateProps
            typedef struct reactJsxNoDuplicateProps_type : ::bond::reflection::FieldTemplate<
                19,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxNoDuplicateProps,
                &s_reactJsxNoDuplicateProps_metadata
            > {} reactJsxNoDuplicateProps;
        
            // reactJsxNoLiterals
            typedef struct reactJsxNoLiterals_type : ::bond::reflection::FieldTemplate<
                20,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxNoLiterals,
                &s_reactJsxNoLiterals_metadata
            > {} reactJsxNoLiterals;
        
            // reactJsxNoUndef
            typedef struct reactJsxNoUndef_type : ::bond::reflection::FieldTemplate<
                21,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxNoUndef,
                &s_reactJsxNoUndef_metadata
            > {} reactJsxNoUndef;
        
            // reactJsxSortPropTypes
            typedef struct reactJsxSortPropTypes_type : ::bond::reflection::FieldTemplate<
                22,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxSortPropTypes,
                &s_reactJsxSortPropTypes_metadata
            > {} reactJsxSortPropTypes;
        
            // reactJsxSortProps
            typedef struct reactJsxSortProps_type : ::bond::reflection::FieldTemplate<
                23,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxSortProps,
                &s_reactJsxSortProps_metadata
            > {} reactJsxSortProps;
        
            // reactJsxUsesReact
            typedef struct reactJsxUsesReact_type : ::bond::reflection::FieldTemplate<
                24,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxUsesReact,
                &s_reactJsxUsesReact_metadata
            > {} reactJsxUsesReact;
        
            // reactJsxUsesVars
            typedef struct reactJsxUsesVars_type : ::bond::reflection::FieldTemplate<
                25,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactJsxUsesVars,
                &s_reactJsxUsesVars_metadata
            > {} reactJsxUsesVars;
        
            // reactNoDanger
            typedef struct reactNoDanger_type : ::bond::reflection::FieldTemplate<
                26,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactNoDanger,
                &s_reactNoDanger_metadata
            > {} reactNoDanger;
        
            // reactNoDidMountSetState
            typedef struct reactNoDidMountSetState_type : ::bond::reflection::FieldTemplate<
                27,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactNoDidMountSetState,
                &s_reactNoDidMountSetState_metadata
            > {} reactNoDidMountSetState;
        
            // reactNoDidUpdateSetState
            typedef struct reactNoDidUpdateSetState_type : ::bond::reflection::FieldTemplate<
                28,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactNoDidUpdateSetState,
                &s_reactNoDidUpdateSetState_metadata
            > {} reactNoDidUpdateSetState;
        
            // reactNoDirectMutationState
            typedef struct reactNoDirectMutationState_type : ::bond::reflection::FieldTemplate<
                29,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactNoDirectMutationState,
                &s_reactNoDirectMutationState_metadata
            > {} reactNoDirectMutationState;
        
            // reactNoMultiComp
            typedef struct reactNoMultiComp_type : ::bond::reflection::FieldTemplate<
                30,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactNoMultiComp,
                &s_reactNoMultiComp_metadata
            > {} reactNoMultiComp;
        
            // reactNoSetState
            typedef struct reactNoSetState_type : ::bond::reflection::FieldTemplate<
                31,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactNoSetState,
                &s_reactNoSetState_metadata
            > {} reactNoSetState;
        
            // reactNoUnknownProperty
            typedef struct reactNoUnknownProperty_type : ::bond::reflection::FieldTemplate<
                32,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactNoUnknownProperty,
                &s_reactNoUnknownProperty_metadata
            > {} reactNoUnknownProperty;
        
            // reactPropTypes
            typedef struct reactPropTypes_type : ::bond::reflection::FieldTemplate<
                33,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactPropTypes,
                &s_reactPropTypes_metadata
            > {} reactPropTypes;
        
            // reactReactInJsxScope
            typedef struct reactReactInJsxScope_type : ::bond::reflection::FieldTemplate<
                34,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactReactInJsxScope,
                &s_reactReactInJsxScope_metadata
            > {} reactReactInJsxScope;
        
            // reactRequireExtension
            typedef struct reactRequireExtension_type : ::bond::reflection::FieldTemplate<
                35,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactRequireExtension,
                &s_reactRequireExtension_metadata
            > {} reactRequireExtension;
        
            // reactSelfClosingComp
            typedef struct reactSelfClosingComp_type : ::bond::reflection::FieldTemplate<
                36,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactSelfClosingComp,
                &s_reactSelfClosingComp_metadata
            > {} reactSelfClosingComp;
        
            // reactSortComp
            typedef struct reactSortComp_type : ::bond::reflection::FieldTemplate<
                37,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactSortComp,
                &s_reactSortComp_metadata
            > {} reactSortComp;
        
            // reactWrapMultilines
            typedef struct reactWrapMultilines_type : ::bond::reflection::FieldTemplate<
                38,
                ::bond::reflection::required_field_modifier,
                Rules,
                uint8_t,
                &Rules::reactWrapMultilines,
                &s_reactWrapMultilines_metadata
            > {} reactWrapMultilines;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::reactWrapMultilines>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::reactSortComp>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::reactSelfClosingComp>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::reactRequireExtension>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::reactReactInJsxScope>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::reactPropTypes>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::reactNoUnknownProperty>::type fields7;
        private: typedef boost::mpl::push_front<fields7, var::reactNoSetState>::type fields8;
        private: typedef boost::mpl::push_front<fields8, var::reactNoMultiComp>::type fields9;
        private: typedef boost::mpl::push_front<fields9, var::reactNoDirectMutationState>::type fields10;
        private: typedef boost::mpl::push_front<fields10, var::reactNoDidUpdateSetState>::type fields11;
        private: typedef boost::mpl::push_front<fields11, var::reactNoDidMountSetState>::type fields12;
        private: typedef boost::mpl::push_front<fields12, var::reactNoDanger>::type fields13;
        private: typedef boost::mpl::push_front<fields13, var::reactJsxUsesVars>::type fields14;
        private: typedef boost::mpl::push_front<fields14, var::reactJsxUsesReact>::type fields15;
        private: typedef boost::mpl::push_front<fields15, var::reactJsxSortProps>::type fields16;
        private: typedef boost::mpl::push_front<fields16, var::reactJsxSortPropTypes>::type fields17;
        private: typedef boost::mpl::push_front<fields17, var::reactJsxNoUndef>::type fields18;
        private: typedef boost::mpl::push_front<fields18, var::reactJsxNoLiterals>::type fields19;
        private: typedef boost::mpl::push_front<fields19, var::reactJsxNoDuplicateProps>::type fields20;
        private: typedef boost::mpl::push_front<fields20, var::reactJsxMaxPropsPerLine>::type fields21;
        private: typedef boost::mpl::push_front<fields21, var::reactJsxIndentProps>::type fields22;
        private: typedef boost::mpl::push_front<fields22, var::reactJsxCurlySpacing>::type fields23;
        private: typedef boost::mpl::push_front<fields23, var::reactJsxClosingBracketLocation>::type fields24;
        private: typedef boost::mpl::push_front<fields24, var::reactJsxBooleanValue>::type fields25;
        private: typedef boost::mpl::push_front<fields25, var::reactForbidPropTypes>::type fields26;
        private: typedef boost::mpl::push_front<fields26, var::reactDisplayName>::type fields27;
        private: typedef boost::mpl::push_front<fields27, var::validJsdoc>::type fields28;
        private: typedef boost::mpl::push_front<fields28, var::semiSpacing>::type fields29;
        private: typedef boost::mpl::push_front<fields29, var::semi>::type fields30;
        private: typedef boost::mpl::push_front<fields30, var::noUnusedVars>::type fields31;
        private: typedef boost::mpl::push_front<fields31, var::noUndef>::type fields32;
        private: typedef boost::mpl::push_front<fields32, var::noIrregularWhitespace>::type fields33;
        private: typedef boost::mpl::push_front<fields33, var::noExtraParens>::type fields34;
        private: typedef boost::mpl::push_front<fields34, var::noExtraSemi>::type fields35;
        private: typedef boost::mpl::push_front<fields35, var::noDebugger>::type fields36;
        private: typedef boost::mpl::push_front<fields36, var::noConsole>::type fields37;
        private: typedef boost::mpl::push_front<fields37, var::commaDangle>::type fields38;
        private: typedef boost::mpl::push_front<fields38, var::eqeqeq>::type fields39;

        public: typedef fields39::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Rules", "benchmark.Rules",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Main
    //
    struct Main::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_extends_metadata;
        private: static const ::bond::Metadata s_parser_metadata;
        private: static const ::bond::Metadata s_ecmaFeatures_metadata;
        private: static const ::bond::Metadata s_plugins_metadata;
        private: static const ::bond::Metadata s_env_metadata;
        private: static const ::bond::Metadata s_rules_metadata;

        public: struct var
        {
            // extends
            typedef struct extends_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                Main,
                std::string,
                &Main::extends,
                &s_extends_metadata
            > {} extends;
        
            // parser
            typedef struct parser_type : ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::required_field_modifier,
                Main,
                std::string,
                &Main::parser,
                &s_parser_metadata
            > {} parser;
        
            // ecmaFeatures
            typedef struct ecmaFeatures_type : ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::required_field_modifier,
                Main,
                ::benchmark::EcmaFeatures,
                &Main::ecmaFeatures,
                &s_ecmaFeatures_metadata
            > {} ecmaFeatures;
        
            // plugins
            typedef struct plugins_type : ::bond::reflection::FieldTemplate<
                3,
                ::bond::reflection::required_field_modifier,
                Main,
                std::list<std::string>,
                &Main::plugins,
                &s_plugins_metadata
            > {} plugins;
        
            // env
            typedef struct env_type : ::bond::reflection::FieldTemplate<
                4,
                ::bond::reflection::required_field_modifier,
                Main,
                ::benchmark::Environment,
                &Main::env,
                &s_env_metadata
            > {} env;
        
            // rules
            typedef struct rules_type : ::bond::reflection::FieldTemplate<
                5,
                ::bond::reflection::required_field_modifier,
                Main,
                ::benchmark::Rules,
                &Main::rules,
                &s_rules_metadata
            > {} rules;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::rules>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::env>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::plugins>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::ecmaFeatures>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::parser>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::extends>::type fields6;

        public: typedef fields6::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Main", "benchmark.Main",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace benchmark
