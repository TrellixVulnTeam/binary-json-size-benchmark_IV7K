
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.12.1.0
//   Input filename:  benchmark/netcoreproject/bond/schema.bond
//   Output filename: schema_reflection.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "schema_types.h"
#include <bond/core/reflection.h>

namespace benchmark
{
    //
    // CompilationOptions
    //
    struct CompilationOptions::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_warningsAsErrors_metadata;

        public: struct var
        {
            // warningsAsErrors
            typedef struct warningsAsErrors_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                CompilationOptions,
                bool,
                &CompilationOptions::warningsAsErrors,
                &s_warningsAsErrors_metadata
            > {} warningsAsErrors;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::warningsAsErrors>::type fields1;

        public: typedef fields1::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("CompilationOptions", "benchmark.CompilationOptions",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Dependencies
    //
    struct Dependencies::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_microsoftBclImmutable_metadata;
        private: static const ::bond::Metadata s_microsoftAspNetConfigurationModel_metadata;
        private: static const ::bond::Metadata s_microsoftAspNetDependencyInjection_metadata;
        private: static const ::bond::Metadata s_microsoftAspNetLogging_metadata;
        private: static const ::bond::Metadata s_systemDataCommon_metadata;

        public: struct var
        {
            // microsoftBclImmutable
            typedef struct microsoftBclImmutable_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                Dependencies,
                std::string,
                &Dependencies::microsoftBclImmutable,
                &s_microsoftBclImmutable_metadata
            > {} microsoftBclImmutable;
        
            // microsoftAspNetConfigurationModel
            typedef struct microsoftAspNetConfigurationModel_type : ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::required_field_modifier,
                Dependencies,
                std::string,
                &Dependencies::microsoftAspNetConfigurationModel,
                &s_microsoftAspNetConfigurationModel_metadata
            > {} microsoftAspNetConfigurationModel;
        
            // microsoftAspNetDependencyInjection
            typedef struct microsoftAspNetDependencyInjection_type : ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::required_field_modifier,
                Dependencies,
                std::string,
                &Dependencies::microsoftAspNetDependencyInjection,
                &s_microsoftAspNetDependencyInjection_metadata
            > {} microsoftAspNetDependencyInjection;
        
            // microsoftAspNetLogging
            typedef struct microsoftAspNetLogging_type : ::bond::reflection::FieldTemplate<
                3,
                ::bond::reflection::required_field_modifier,
                Dependencies,
                std::string,
                &Dependencies::microsoftAspNetLogging,
                &s_microsoftAspNetLogging_metadata
            > {} microsoftAspNetLogging;
        
            // systemDataCommon
            typedef struct systemDataCommon_type : ::bond::reflection::FieldTemplate<
                4,
                ::bond::reflection::required_field_modifier,
                Dependencies,
                std::string,
                &Dependencies::systemDataCommon,
                &s_systemDataCommon_metadata
            > {} systemDataCommon;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::systemDataCommon>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::microsoftAspNetLogging>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::microsoftAspNetDependencyInjection>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::microsoftAspNetConfigurationModel>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::microsoftBclImmutable>::type fields5;

        public: typedef fields5::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Dependencies", "benchmark.Dependencies",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Net45Dependencies
    //
    struct Net45Dependencies::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_systemRuntime_metadata;
        private: static const ::bond::Metadata s_systemCollections_metadata;

        public: struct var
        {
            // systemRuntime
            typedef struct systemRuntime_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                Net45Dependencies,
                std::string,
                &Net45Dependencies::systemRuntime,
                &s_systemRuntime_metadata
            > {} systemRuntime;
        
            // systemCollections
            typedef struct systemCollections_type : ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::required_field_modifier,
                Net45Dependencies,
                std::string,
                &Net45Dependencies::systemCollections,
                &s_systemCollections_metadata
            > {} systemCollections;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::systemCollections>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::systemRuntime>::type fields2;

        public: typedef fields2::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Net45Dependencies", "benchmark.Net45Dependencies",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // K10Dependencies
    //
    struct K10Dependencies::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_systemCollections_metadata;
        private: static const ::bond::Metadata s_systemCollectionsConcurrent_metadata;
        private: static const ::bond::Metadata s_systemComponentModel_metadata;
        private: static const ::bond::Metadata s_systemConsole_metadata;
        private: static const ::bond::Metadata s_systemDiagnosticsContracts_metadata;
        private: static const ::bond::Metadata s_systemDiagnosticsDebug_metadata;
        private: static const ::bond::Metadata s_systemGlobalization_metadata;
        private: static const ::bond::Metadata s_systemLinq_metadata;
        private: static const ::bond::Metadata s_systemLinqExpressions_metadata;
        private: static const ::bond::Metadata s_systemLinqQueryable_metadata;
        private: static const ::bond::Metadata s_systemReflection_metadata;
        private: static const ::bond::Metadata s_systemReflectionExtensions_metadata;
        private: static const ::bond::Metadata s_systemResourcesResourceManager_metadata;
        private: static const ::bond::Metadata s_systemRuntime_metadata;
        private: static const ::bond::Metadata s_systemRuntimeExtensions_metadata;
        private: static const ::bond::Metadata s_systemThreading_metadata;
        private: static const ::bond::Metadata s_systemThreadingTasks_metadata;

        public: struct var
        {
            // systemCollections
            typedef struct systemCollections_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemCollections,
                &s_systemCollections_metadata
            > {} systemCollections;
        
            // systemCollectionsConcurrent
            typedef struct systemCollectionsConcurrent_type : ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemCollectionsConcurrent,
                &s_systemCollectionsConcurrent_metadata
            > {} systemCollectionsConcurrent;
        
            // systemComponentModel
            typedef struct systemComponentModel_type : ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemComponentModel,
                &s_systemComponentModel_metadata
            > {} systemComponentModel;
        
            // systemConsole
            typedef struct systemConsole_type : ::bond::reflection::FieldTemplate<
                3,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemConsole,
                &s_systemConsole_metadata
            > {} systemConsole;
        
            // systemDiagnosticsContracts
            typedef struct systemDiagnosticsContracts_type : ::bond::reflection::FieldTemplate<
                4,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemDiagnosticsContracts,
                &s_systemDiagnosticsContracts_metadata
            > {} systemDiagnosticsContracts;
        
            // systemDiagnosticsDebug
            typedef struct systemDiagnosticsDebug_type : ::bond::reflection::FieldTemplate<
                5,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemDiagnosticsDebug,
                &s_systemDiagnosticsDebug_metadata
            > {} systemDiagnosticsDebug;
        
            // systemGlobalization
            typedef struct systemGlobalization_type : ::bond::reflection::FieldTemplate<
                6,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemGlobalization,
                &s_systemGlobalization_metadata
            > {} systemGlobalization;
        
            // systemLinq
            typedef struct systemLinq_type : ::bond::reflection::FieldTemplate<
                7,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemLinq,
                &s_systemLinq_metadata
            > {} systemLinq;
        
            // systemLinqExpressions
            typedef struct systemLinqExpressions_type : ::bond::reflection::FieldTemplate<
                8,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemLinqExpressions,
                &s_systemLinqExpressions_metadata
            > {} systemLinqExpressions;
        
            // systemLinqQueryable
            typedef struct systemLinqQueryable_type : ::bond::reflection::FieldTemplate<
                9,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemLinqQueryable,
                &s_systemLinqQueryable_metadata
            > {} systemLinqQueryable;
        
            // systemReflection
            typedef struct systemReflection_type : ::bond::reflection::FieldTemplate<
                10,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemReflection,
                &s_systemReflection_metadata
            > {} systemReflection;
        
            // systemReflectionExtensions
            typedef struct systemReflectionExtensions_type : ::bond::reflection::FieldTemplate<
                11,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemReflectionExtensions,
                &s_systemReflectionExtensions_metadata
            > {} systemReflectionExtensions;
        
            // systemResourcesResourceManager
            typedef struct systemResourcesResourceManager_type : ::bond::reflection::FieldTemplate<
                12,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemResourcesResourceManager,
                &s_systemResourcesResourceManager_metadata
            > {} systemResourcesResourceManager;
        
            // systemRuntime
            typedef struct systemRuntime_type : ::bond::reflection::FieldTemplate<
                13,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemRuntime,
                &s_systemRuntime_metadata
            > {} systemRuntime;
        
            // systemRuntimeExtensions
            typedef struct systemRuntimeExtensions_type : ::bond::reflection::FieldTemplate<
                14,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemRuntimeExtensions,
                &s_systemRuntimeExtensions_metadata
            > {} systemRuntimeExtensions;
        
            // systemThreading
            typedef struct systemThreading_type : ::bond::reflection::FieldTemplate<
                15,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemThreading,
                &s_systemThreading_metadata
            > {} systemThreading;
        
            // systemThreadingTasks
            typedef struct systemThreadingTasks_type : ::bond::reflection::FieldTemplate<
                16,
                ::bond::reflection::required_field_modifier,
                K10Dependencies,
                std::string,
                &K10Dependencies::systemThreadingTasks,
                &s_systemThreadingTasks_metadata
            > {} systemThreadingTasks;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::systemThreadingTasks>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::systemThreading>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::systemRuntimeExtensions>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::systemRuntime>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::systemResourcesResourceManager>::type fields5;
        private: typedef boost::mpl::push_front<fields5, var::systemReflectionExtensions>::type fields6;
        private: typedef boost::mpl::push_front<fields6, var::systemReflection>::type fields7;
        private: typedef boost::mpl::push_front<fields7, var::systemLinqQueryable>::type fields8;
        private: typedef boost::mpl::push_front<fields8, var::systemLinqExpressions>::type fields9;
        private: typedef boost::mpl::push_front<fields9, var::systemLinq>::type fields10;
        private: typedef boost::mpl::push_front<fields10, var::systemGlobalization>::type fields11;
        private: typedef boost::mpl::push_front<fields11, var::systemDiagnosticsDebug>::type fields12;
        private: typedef boost::mpl::push_front<fields12, var::systemDiagnosticsContracts>::type fields13;
        private: typedef boost::mpl::push_front<fields13, var::systemConsole>::type fields14;
        private: typedef boost::mpl::push_front<fields14, var::systemComponentModel>::type fields15;
        private: typedef boost::mpl::push_front<fields15, var::systemCollectionsConcurrent>::type fields16;
        private: typedef boost::mpl::push_front<fields16, var::systemCollections>::type fields17;

        public: typedef fields17::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("K10Dependencies", "benchmark.K10Dependencies",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Net45
    //
    struct Net45::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_dependencies_metadata;

        public: struct var
        {
            // dependencies
            typedef struct dependencies_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                Net45,
                ::benchmark::Net45Dependencies,
                &Net45::dependencies,
                &s_dependencies_metadata
            > {} dependencies;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::dependencies>::type fields1;

        public: typedef fields1::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Net45", "benchmark.Net45",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // K10
    //
    struct K10::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_dependencies_metadata;

        public: struct var
        {
            // dependencies
            typedef struct dependencies_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                K10,
                ::benchmark::K10Dependencies,
                &K10::dependencies,
                &s_dependencies_metadata
            > {} dependencies;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::dependencies>::type fields1;

        public: typedef fields1::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("K10", "benchmark.K10",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Frameworks
    //
    struct Frameworks::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_net45_metadata;
        private: static const ::bond::Metadata s_k10_metadata;

        public: struct var
        {
            // net45
            typedef struct net45_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                Frameworks,
                ::benchmark::Net45,
                &Frameworks::net45,
                &s_net45_metadata
            > {} net45;
        
            // k10
            typedef struct k10_type : ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::required_field_modifier,
                Frameworks,
                ::benchmark::K10,
                &Frameworks::k10,
                &s_k10_metadata
            > {} k10;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::k10>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::net45>::type fields2;

        public: typedef fields2::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Frameworks", "benchmark.Frameworks",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    //
    // Main
    //
    struct Main::Schema
    {
        typedef ::bond::no_base base;

        static const ::bond::Metadata metadata;
        
        private: static const ::bond::Metadata s_version_metadata;
        private: static const ::bond::Metadata s_compilationOptions_metadata;
        private: static const ::bond::Metadata s_dependencies_metadata;
        private: static const ::bond::Metadata s_code_metadata;
        private: static const ::bond::Metadata s_frameworks_metadata;

        public: struct var
        {
            // version
            typedef struct version_type : ::bond::reflection::FieldTemplate<
                0,
                ::bond::reflection::required_field_modifier,
                Main,
                std::string,
                &Main::version,
                &s_version_metadata
            > {} version;
        
            // compilationOptions
            typedef struct compilationOptions_type : ::bond::reflection::FieldTemplate<
                1,
                ::bond::reflection::required_field_modifier,
                Main,
                ::benchmark::CompilationOptions,
                &Main::compilationOptions,
                &s_compilationOptions_metadata
            > {} compilationOptions;
        
            // dependencies
            typedef struct dependencies_type : ::bond::reflection::FieldTemplate<
                2,
                ::bond::reflection::required_field_modifier,
                Main,
                ::benchmark::Dependencies,
                &Main::dependencies,
                &s_dependencies_metadata
            > {} dependencies;
        
            // code
            typedef struct code_type : ::bond::reflection::FieldTemplate<
                3,
                ::bond::reflection::required_field_modifier,
                Main,
                std::string,
                &Main::code,
                &s_code_metadata
            > {} code;
        
            // frameworks
            typedef struct frameworks_type : ::bond::reflection::FieldTemplate<
                4,
                ::bond::reflection::required_field_modifier,
                Main,
                ::benchmark::Frameworks,
                &Main::frameworks,
                &s_frameworks_metadata
            > {} frameworks;
        };

        private: typedef boost::mpl::list<> fields0;
        private: typedef boost::mpl::push_front<fields0, var::frameworks>::type fields1;
        private: typedef boost::mpl::push_front<fields1, var::code>::type fields2;
        private: typedef boost::mpl::push_front<fields2, var::dependencies>::type fields3;
        private: typedef boost::mpl::push_front<fields3, var::compilationOptions>::type fields4;
        private: typedef boost::mpl::push_front<fields4, var::version>::type fields5;

        public: typedef fields5::type fields;
        
        
        static ::bond::Metadata GetMetadata()
        {
            return ::bond::reflection::MetadataInit("Main", "benchmark.Main",
                ::bond::reflection::Attributes()
            );
        }
    };
    

    
} // namespace benchmark
